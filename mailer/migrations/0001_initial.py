# Generated by Django 2.2.6 on 2020-08-17 13:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Email_addres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addres', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=250)),
                ('crypt', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalMailBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='статус')),
                ('host', models.CharField(max_length=200, verbose_name='сервер')),
                ('port', models.IntegerField(verbose_name='порт')),
                ('user', models.CharField(max_length=200, verbose_name='учетная запись')),
                ('psw', models.CharField(max_length=32)),
                ('protocol', models.CharField(choices=[('POP', 'POP'), ('IMAP', 'IMAP')], max_length=30)),
                ('crypt', models.CharField(choices=[('None', 'None'), ('STARTTLS', 'STARTTLS'), ('SSL/TLS', 'SSL/TLS')], max_length=30)),
                ('auth_method', models.CharField(choices=[('None', 'None'), ('pasw', 'pasw'), ('Kerberos/GSSAPI', 'Kerberos/GSSAPI')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='FilePool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FileSend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('file_path', models.FilePathField(max_length=255, path='C:/MAIL_SOTOREG/')),
                ('url', models.CharField(blank=True, max_length=350)),
            ],
        ),
        migrations.CreateModel(
            name='MessageLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.TextField(editable=False, null=True, verbose_name='Номер отправление')),
                ('when_added', models.DateTimeField(db_index=True, verbose_name='дата создания')),
                ('when_attempted', models.DateTimeField(default=django.utils.timezone.now)),
                ('result', models.CharField(choices=[('1', 'Відправленно'), ('2', 'Не відправленно'), ('3', 'Помилка'), ('4', 'У черзі')], max_length=1, verbose_name='Результат')),
                ('log_message', models.TextField()),
            ],
            options={
                'verbose_name': 'message log',
                'verbose_name_plural': 'message logs',
            },
        ),
        migrations.CreateModel(
            name='ZapEmailAdd',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_wenadd', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('1', 'Не обробленно'), ('2', 'готово')], default='1', max_length=1)),
                ('name', models.CharField(blank=True, max_length=250)),
                ('email_addres', models.EmailField(max_length=254)),
                ('text', models.TextField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('date_send', models.DateTimeField(blank=True, null=True)),
                ('title', models.TextField(verbose_name='Тема письма')),
                ('body', models.TextField(blank=True, null=True, verbose_name='Тело письма')),
                ('mailbox_key', models.CharField(blank=True, max_length=250)),
                ('status', models.CharField(choices=[('1', 'Відправленно'), ('2', 'Не відправленно'), ('3', 'Помилка'), ('4', 'У черзі')], default='4', max_length=4)),
                ('files', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mail_files', to='mailer.FilePool')),
                ('logs', models.ManyToManyField(blank=True, to='mailer.MessageLog')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sender', to=settings.AUTH_USER_MODEL, verbose_name='отправитель')),
                ('to', models.ManyToManyField(to='mailer.Email_addres', verbose_name='получатели')),
            ],
        ),
        migrations.CreateModel(
            name='GrupMail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('list_mails', models.ManyToManyField(to='mailer.Email_addres')),
                ('sender', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='filepool',
            name='files',
            field=models.ManyToManyField(to='mailer.FileSend'),
        ),
        migrations.CreateModel(
            name='IncomeMail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_income', models.DateTimeField(auto_now=True, verbose_name='Дата отримання')),
                ('data_send', models.DateTimeField(blank=True, verbose_name='Дата відправки')),
                ('to', models.CharField(max_length=250, verbose_name='Отримувачі')),
                ('uid_box', models.CharField(default='None', max_length=500, verbose_name='UID поштової скриньки')),
                ('title', models.TextField(blank=True, null=True, verbose_name='Тема')),
                ('body', models.TextField(blank=True, null=True, verbose_name='Тіло листа')),
                ('mailbox_key', models.CharField(blank=True, max_length=250)),
                ('is_full_loaded', models.BooleanField(default=False, verbose_name='Завантеженно')),
                ('files', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='incomeMail', to='mailer.FilePool')),
                ('from_Box', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mailer.ExternalMailBox', verbose_name='завантаженно з')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mailer.Email_addres')),
            ],
            options={
                'verbose_name': 'Вхідна кореспонденція',
                'verbose_name_plural': 'Вхідна кореспонденція',
                'unique_together': {('uid_box', 'from_Box')},
            },
        ),
    ]
